1. Definition of DBMS -> Database Management System or DBMS in short refers to the technology of storing and retrieving users data with utmost efficiency along with appropriate security measures. 

2. Database -> It is a collection of related data and data is a collection of facts and figures     that can be processed to produce information.

3. Architecture -> It is a 3-tier architecture.

                Presentation Tier
                      |
                Application Tier
                      |
                Database Tier

4. Data models -> It define how data is connected to each other and how they are processed and stored inside the system.

5. Super Key −> A set of attributes (one or more) that collectively identifies an entity in an entity set.

6. Candidate Key −> A minimal super key is called a candidate key. An entity set may have more than one candidate key.

7. Primary Key −> A primary key is one of the candidate keys chosen by the database designer to uniquely identify the entity set.

8. E-R Diagram Representation :-
      a) Entities are represented by means of rectangles.
      b) Attributes are represented by means of ellipses.
      c) Composite attributes are represented by ellipses that are connected with an ellipse.
      d) Multivalued attributes are depicted by double ellipse.
      e) Derived attributes are depicted by dashed ellipse.

9. Generalization -> In this, a number of entities are brought together into one generalized entity based on their similar characteristics.

10. Specialization -> In specialization, a group of entities is divided into sub-groups based on their characteristics. 

11. Relation Data Model Concepts :-

      a) Tables − In relational data model, relations are saved in the format of Tables. This format stores the relation among entities. A table has rows and columns, where rows represents records and columns represent the attributes.

      b) Tuple − A single row of a table, which contains a single record for that relation is called a tuple.

      c) Relation instance − A finite set of tuples in the relational database system represents relation instance. Relation instances do not have duplicate tuples.

      d) Relation schema − A relation schema describes the relation name (table name), attributes, and their names.

      e) Relation key − Each row has one or more attributes, known as relation key, which can identify the row in the relation (table) uniquely.

      f) Attribute domain − Every attribute has some pre-defined value scope, known as attribute domain.

12. Data Independence : Two types of data independence are->
      a) Logical Data Independence - It is a kind of mechanism , which liberalizes itself from actual data stored on the disk. 
      b) Physical Data Independence - Physical data independence is the power to change the physical data without impacting the schema or logical data.

13. Alternative key : A set of keys which are from candidate keys set after neglecting primary key.

14. Foreign Key : It is an attribute or set of attributes that references to primary key of same table or another table(relation). There can be more than one foreign key in a table.

      Referential Integrity :
      
                  Referenced Table (Base Table)
      Operations -> Insertion (No violation)
                    Deletion (May cause violation)
                    Updation (May cause violation)
                  
                  Referencing Table (Child Table)
      Operations -> Insertion (May cause violation)
                    Deletion (No violation)
                    Updation (May cause violation)

15. Normalization : Normalization is a method to remove all these anomalies and bring the database to a consistent state.

      1st normal form : Table should not contain multivalued attribute.
      2nd normal form : a) Table or relation must be in 1NF.
                        b) All the non-prime attributes should be fully functional dependent on candidate key.
                        There should be no partial dependency in a relation.
      3rd normal form : a) Table must be in 2NF.
                        b) There should be no transitive dependency in a table.
      Boyce Codd normal form : a) Table must be in 3NF.
                              b) For any non-trivial functional dependency, X → A, X must be a super-key.

16. Joins : Join is a combination of a Cartesian product followed by a selection process. A Join operation pairs two tuples from different relations, if and only if a given join condition is satisfied.
      
      a) Natural Join : Natural join does not use any comparison operator. It does not concatenate the way a Cartesian product does. We can perform a Natural Join only if there is at least one common attribute that exists between two relations. In addition, the attributes must have the same name and domain.
      
      b) Self Join : A self join is a specific type of SQL join where a table is joined with itself. This is often used when you want to combine rows with other rows in the same table, typically when those rows have a relationship with each other. 

      c) Equi Join : An equi join returns rows that have matching values in the specified columns from each table.

      d) Left Outer Join : It gives the matching rows and the rows which are in left table but not in right table. 

      e) Right Outer Join : It gives the matching rows and the rows which are in the right table but not in the left table. 

      f) Full Outer Join : All the tuples from both participating relations are included in the resulting relation. If there are no matching tuples for both relations, their respective unmatched attributes are made NULL.